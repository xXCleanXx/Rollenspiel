Index: src/com/roleplay/gui/GameFrame.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.roleplay.gui;\r\n\r\nimport com.roleplay.Factories.KeyFactory;\r\nimport com.roleplay.characters.Character;\r\nimport com.roleplay.interfaces.IObserver;\r\nimport com.roleplay.map.Settings;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.util.List;\r\n\r\npublic class GameFrame extends JFrame implements IObserver {\r\n    private BoardPanel board;\r\n    private PlayerListPanel playerList;\r\n    private ControlPanel gameControl;\r\n\r\n    public GameFrame(Settings settings) {\r\n        super();\r\n        initialize(settings);\r\n    }\r\n\r\n    private void initialize(Settings settings) {\r\n        setTitle(\"Nerds vs Monsters\");\r\n\r\n        JMenuBar controlBar = new JMenuBar();\r\n        controlBar.add(new JMenu(\"Settings\"));\r\n        setJMenuBar(controlBar);\r\n\r\n        board = new BoardPanel(settings);\r\n        add(board, BorderLayout.CENTER);\r\n        gameControl = new ControlPanel(settings);\r\n        add(gameControl, BorderLayout.EAST);\r\n        playerList = new PlayerListPanel(settings);\r\n        add(playerList, BorderLayout.WEST);\r\n\r\n        KeyFactory keyFactory = new KeyFactory(settings);\r\n        keyFactory.addKeyBindings(this);\r\n\r\n        revalidate();\r\n        repaint();\r\n\r\n        setResizable(false);\r\n        pack();\r\n\r\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        setLocationRelativeTo(null);\r\n        setVisible(true);\r\n    }\r\n\r\n    public BoardPanel getBoard(){\r\n        return this.board;\r\n    }\r\n\r\n    @Override\r\n    public void update() {\r\n        board.update();\r\n        playerList.update();\r\n        gameControl.update();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/roleplay/gui/GameFrame.java b/src/com/roleplay/gui/GameFrame.java
--- a/src/com/roleplay/gui/GameFrame.java	(revision 376cb1327a38f81b1027ae69459a7dc16181ab42)
+++ b/src/com/roleplay/gui/GameFrame.java	(date 1679652720365)
@@ -1,13 +1,11 @@
 package com.roleplay.gui;
 
 import com.roleplay.Factories.KeyFactory;
-import com.roleplay.characters.Character;
 import com.roleplay.interfaces.IObserver;
 import com.roleplay.map.Settings;
 
 import javax.swing.*;
 import java.awt.*;
-import java.util.List;
 
 public class GameFrame extends JFrame implements IObserver {
     private BoardPanel board;
Index: src/com/roleplay/gui/BoardPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.roleplay.gui;\r\n\r\nimport com.roleplay.characters.Character;\r\nimport com.roleplay.effects.HealEffect;\r\nimport com.roleplay.effects.InvisibleEffect;\r\nimport com.roleplay.items.Item;\r\nimport com.roleplay.items.ItemProperties;\r\nimport com.roleplay.items.artefacts.*;\r\nimport com.roleplay.map.GameMap;\r\nimport com.roleplay.map.GameMapCreator;\r\nimport com.roleplay.map.Settings;\r\nimport com.roleplay.tools.ImageUtils;\r\nimport com.roleplay.interfaces.IObserver;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Random;\r\n\r\npublic class BoardPanel extends JPanel implements ActionListener {\r\n    private final GameMap gameMap;\r\n    private final List<Item> items;\r\n    public InventoryPanel inventoryPanel;\r\n\r\n    public BoardPanel(Settings settings) {\r\n        setLayout(new OverlayLayout(this));\r\n\r\n        inventoryPanel = new InventoryPanel(settings);\r\n        gameMap = GameMapCreator.loadRandomMap();\r\n        gameMap.setSettings(settings);\r\n\r\n        setPreferredSize(new Dimension(GameMap.TILE_SIZE * gameMap.getWidth(), GameMap.TILE_SIZE * gameMap.getHeight()));\r\n\r\n        items = populateArtefacts();\r\n\r\n        Timer timer = new Timer(25, this);\r\n        timer.start();\r\n\r\n        add(inventoryPanel);\r\n    }\r\n\r\n    private List<Item> populateArtefacts() {\r\n        List<Item> artefactList = new ArrayList<>();\r\n        Random rand = new Random();\r\n        Point position;\r\n        int artefactX;\r\n        int artefactY;\r\n\r\n        for (int i = 0; i < rand.nextInt((gameMap.getWidth() * gameMap.getHeight()) / 4 * gameMap.getSettings().getPlayers().size()); i++) {\r\n            do {\r\n                artefactX = rand.nextInt(gameMap.getWidth());\r\n                artefactY = rand.nextInt(gameMap.getHeight());\r\n\r\n                position = new Point(artefactX, artefactY);\r\n            } while (!gameMap.getMapElements()[artefactY][artefactX].getProperties().getName().equalsIgnoreCase(\"way\"));\r\n\r\n            Artefact item = switch (rand.nextInt(4)) {\r\n                case 0 -> new Amulet(new ItemProperties(\"amulet\", new Point(position), ImageUtils.loadImage(\"src/com/roleplay/resources/images/items/amulet_32x32.png\")), new HealEffect(3));\r\n                case 1 -> new Cape(new ItemProperties(\"cape\", new Point(position), ImageUtils.loadImage(\"src/com/roleplay/resources/images/items/cape_32x32.png\")),new InvisibleEffect(3));\r\n                case 2 -> new Potion(new ItemProperties(\"potion\", new Point(position), ImageUtils.loadImage(\"src/com/roleplay/resources/images/items/potion_32x32.png\")),new HealEffect(3));\r\n                case 3 -> new Ring(new ItemProperties(\"ring\", new Point(position), ImageUtils.loadImage(\"src/com/roleplay/resources/images/items/ring_32x32.png\")),new HealEffect(3));\r\n                default -> null;\r\n            };\r\n\r\n            artefactList.add(item);\r\n        }\r\n\r\n        return artefactList;\r\n    }\r\n\r\n    @Override\r\n    protected void paintComponent(Graphics g) {\r\n        super.paintComponent(g);\r\n\r\n        g.drawImage(gameMap.getMap(), 0, 0, null);\r\n\r\n        for (Item item : items) {\r\n            item.draw(g, this);\r\n        }\r\n        for (Character character : gameMap.getSettings().getPlayers()) {\r\n            character.draw(g, this);\r\n        }\r\n\r\n        Toolkit.getDefaultToolkit().sync();\r\n\r\n    }\r\n\r\n    public GameMap getGameMap(){\r\n        return this.gameMap;\r\n    }\r\n\r\n    public List<Item> getItems(){\r\n        return this.items;\r\n    }\r\n\r\n    public void update() {\r\n        repaint();\r\n    }\r\n\r\n    @Override\r\n    public void actionPerformed(ActionEvent e) {\r\n        for(Character c : gameMap.getSettings().getPlayers()){\r\n            c.tick(gameMap.getWidth(), gameMap.getHeight());\r\n        }\r\n\r\n        repaint();\r\n    }\r\n\r\n    public void setInventoryVisible(){\r\n        if (inventoryPanel.isVisible()) {\r\n            inventoryPanel.setVisible(false);\r\n        } else {\r\n            inventoryPanel.setVisible(true);\r\n            inventoryPanel.initialize();\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/roleplay/gui/BoardPanel.java b/src/com/roleplay/gui/BoardPanel.java
--- a/src/com/roleplay/gui/BoardPanel.java	(revision 376cb1327a38f81b1027ae69459a7dc16181ab42)
+++ b/src/com/roleplay/gui/BoardPanel.java	(date 1679652740715)
@@ -10,7 +10,6 @@
 import com.roleplay.map.GameMapCreator;
 import com.roleplay.map.Settings;
 import com.roleplay.tools.ImageUtils;
-import com.roleplay.interfaces.IObserver;
 
 import javax.swing.*;
 import java.awt.*;
Index: src/com/roleplay/gui/FightPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.roleplay.gui;\r\n\r\nimport com.roleplay.characters.Character;\r\nimport com.roleplay.items.weapons.Weapon;\r\n\r\nimport javax.swing.*;\r\nimport java.util.Objects;\r\n\r\npublic class FightPanel {\r\n    private JPanel fightPanel;\r\n    private JLabel lbl_name1;\r\n    private JLabel lbl_name2;\r\n    private JLabel lbl_health1;\r\n    private JLabel lbl_health2;\r\n    private JLabel lbl_info;\r\n    private JLabel lbl_texture1;\r\n    private JLabel lbl_texture2;\r\n\r\n    public FightPanel(Character fighter, Character opponent) {\r\n        lbl_name1.setText(fighter.getProperties().getDisplayName());\r\n        lbl_health1.setText(\"\" + fighter.getProperties().getHealthPoints());\r\n        lbl_texture1.setIcon(new ImageIcon(fighter.getProperties().getTexture300()));\r\n\r\n        lbl_name2.setText(opponent.getProperties().getDisplayName());\r\n        lbl_health2.setText(\"\" + opponent.getProperties().getHealthPoints());\r\n        lbl_texture2.setIcon(new ImageIcon(opponent.getProperties().getTexture300()));\r\n\r\n        lbl_info.setText(fighter.getProperties().getDisplayName() + \" greift \" + opponent.getProperties().getDisplayName() + \" an.\");\r\n        attack(fighter, opponent);\r\n        lbl_info.setText(fighter.getProperties().getDisplayName() + \" greift \" + opponent.getProperties().getDisplayName() + \" an.\");\r\n        attack(opponent, fighter);\r\n        lbl_info.setText(\"Kampf beendet\");\r\n\r\n    }\r\n\r\n    private boolean attack(Character fighter, Character opponent) {\r\n        if (Objects.requireNonNull(fighter).getProperties().getInventory().getFirstHand() instanceof Weapon weapon) {\r\n            double defence = Objects.requireNonNull(opponent).defend();\r\n\r\n            if (defence < weapon.getDamage()) {\r\n                double diff = weapon.getDamage() - defence;\r\n\r\n                opponent.getProperties().setHealthPoints(opponent.getProperties().getHealthPoints() - diff);\r\n                lbl_info.setText(opponent.getProperties().getDisplayName() + \" erleidet \" + diff + \" schaden.\");\r\n\r\n            }\r\n        }\r\n        return opponent.getProperties().getHealthPoints() > 0;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/roleplay/gui/FightPanel.java b/src/com/roleplay/gui/FightPanel.java
--- a/src/com/roleplay/gui/FightPanel.java	(revision 376cb1327a38f81b1027ae69459a7dc16181ab42)
+++ b/src/com/roleplay/gui/FightPanel.java	(date 1679652996283)
@@ -33,7 +33,7 @@
 
     }
 
-    private boolean attack(Character fighter, Character opponent) {
+    private void attack(Character fighter, Character opponent) {
         if (Objects.requireNonNull(fighter).getProperties().getInventory().getFirstHand() instanceof Weapon weapon) {
             double defence = Objects.requireNonNull(opponent).defend();
 
@@ -45,6 +45,5 @@
 
             }
         }
-        return opponent.getProperties().getHealthPoints() > 0;
     }
 }
Index: src/com/roleplay/items/artefacts/Ring.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.roleplay.items.artefacts;\r\n\r\nimport com.roleplay.characters.Character;\r\nimport com.roleplay.effects.Effect;\r\nimport com.roleplay.items.ItemProperties;\r\n\r\n\r\npublic class Ring extends Artefact {\r\n    public Ring(ItemProperties itemProperties, Effect effect) {\r\n        super(itemProperties, effect);\r\n    }\r\n\r\n    @Override\r\n    public void use(Character character) {\r\n        getEffect().apply(character);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/roleplay/items/artefacts/Ring.java b/src/com/roleplay/items/artefacts/Ring.java
--- a/src/com/roleplay/items/artefacts/Ring.java	(revision 376cb1327a38f81b1027ae69459a7dc16181ab42)
+++ b/src/com/roleplay/items/artefacts/Ring.java	(date 1679653666796)
@@ -4,7 +4,6 @@
 import com.roleplay.effects.Effect;
 import com.roleplay.items.ItemProperties;
 
-
 public class Ring extends Artefact {
     public Ring(ItemProperties itemProperties, Effect effect) {
         super(itemProperties, effect);
Index: src/com/roleplay/gui/InventoryPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.roleplay.gui;\r\n\r\nimport com.roleplay.characters.Character;\r\nimport com.roleplay.items.Inventory;\r\nimport com.roleplay.items.armors.Armor;\r\nimport com.roleplay.items.armors.Shield;\r\nimport com.roleplay.items.weapons.Weapon;\r\nimport com.roleplay.map.Settings;\r\nimport com.roleplay.tools.ImageUtils;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.MouseAdapter;\r\nimport java.awt.event.MouseEvent;\r\nimport java.awt.event.MouseListener;\r\nimport java.util.ArrayList;\r\n\r\npublic class InventoryPanel extends JPanel {\r\n    private JPanel inventoryPanel;\r\n    private JLabel charcterPicture;\r\n    private JLabel lbl_armor;\r\n    private JLabel lbl_wepons;\r\n    private JLabel lbl_shield;\r\n    private JLabel lbl_00;\r\n    private JLabel lbl_01;\r\n    private JLabel lbl_02;\r\n    private JLabel lbl_03;\r\n    private JLabel lbl_04;\r\n    private JLabel lbl_10;\r\n    private JLabel lbl_11;\r\n    private JLabel lbl_12;\r\n    private JLabel lbl_13;\r\n    private JLabel lbl_14;\r\n    private JLabel lbl_20;\r\n    private JLabel lbl_21;\r\n    private JLabel lbl_22;\r\n    private JLabel lbl_23;\r\n    private JLabel lbl_24;\r\n    private Inventory inventory;\r\n    private final ArrayList<JLabel> labelList = new ArrayList<>();\r\n    private final MouseListener listener = new DragMouseAdapter();\r\n    private final Settings settings;\r\n\r\n    public InventoryPanel(Settings settings) {\r\n        this.settings = settings;\r\n        setOpaque(false);\r\n        setVisible(false);\r\n        add(inventoryPanel);\r\n\r\n        lbl_armor.addMouseListener(listener);\r\n        lbl_wepons.addMouseListener(listener);\r\n        lbl_shield.addMouseListener(listener);\r\n\r\n        labelList.add(lbl_00);\r\n        labelList.add(lbl_01);\r\n        labelList.add(lbl_02);\r\n        labelList.add(lbl_03);\r\n        labelList.add(lbl_04);\r\n        labelList.add(lbl_10);\r\n        labelList.add(lbl_11);\r\n        labelList.add(lbl_12);\r\n        labelList.add(lbl_13);\r\n        labelList.add(lbl_14);\r\n        labelList.add(lbl_20);\r\n        labelList.add(lbl_21);\r\n        labelList.add(lbl_22);\r\n        labelList.add(lbl_23);\r\n        labelList.add(lbl_24);\r\n\r\n        setListenerTransferHAndler();\r\n\r\n    }\r\n\r\n    private class DragMouseAdapter extends MouseAdapter {\r\n\r\n        @Override\r\n        public void mouseClicked(MouseEvent e) {\r\n            JLabel c = (JLabel) e.getSource();\r\n            System.out.println(\"Test \" + c);\r\n            if (c == lbl_armor) {\r\n                final int i = inventory.add(inventory.getArmor());\r\n                labelList.get(i).setIcon(new ImageIcon(inventory.get(i).getProperties().getTexture32()));\r\n                lbl_armor.setIcon(null);\r\n                inventory.setArmor(null);\r\n            } else if (c == lbl_wepons) {\r\n                final int i = inventory.add(inventory.getFirstHand());\r\n                labelList.get(i).setIcon(new ImageIcon(inventory.get(i).getProperties().getTexture32()));\r\n                lbl_wepons.setIcon(null);\r\n                inventory.setFirstHand(null);\r\n            } else if (c == lbl_shield) {\r\n                final int i = inventory.add(inventory.getSecondHand());\r\n                labelList.get(i).setIcon(new ImageIcon(inventory.get(i).getProperties().getTexture32()));\r\n                lbl_shield.setIcon(null);\r\n                inventory.setSecondHand(null);\r\n            } else {\r\n                int index = labelList.indexOf(c);\r\n                //Wenn inventory null wirft NPE, wird nicht behandelt.\r\n                var item = inventory.get(index);\r\n                if (item instanceof Shield) {\r\n                    inventory.setSecondHand(item);\r\n                    lbl_shield.setIcon(new ImageIcon(inventory.getSecondHand().getProperties().getTexture32()));\r\n                    inventory.remove(index);\r\n                    c.setIcon(null);\r\n                } else if (item instanceof Weapon) {\r\n                    inventory.setFirstHand(item);\r\n                    lbl_wepons.setIcon(new ImageIcon(inventory.getFirstHand().getProperties().getTexture32()));\r\n                    inventory.remove(index);\r\n                    c.setIcon(null);\r\n                } else if (item instanceof Armor) {\r\n                    inventory.setArmor((Armor) item);\r\n                    lbl_armor.setIcon(new ImageIcon(inventory.getArmor().getProperties().getTexture32()));\r\n                    inventory.remove(index);\r\n                    c.setIcon(null);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public void initialize() {\r\n        for (Character character : this.settings.getPlayers()) {\r\n            if (character.getProperties().isMyTurn()) {\r\n                inventory = character.getProperties().getInventory();\r\n                charcterPicture.setIcon(new ImageIcon(character.getProperties().getTexture100()));\r\n                break;\r\n            }\r\n        }\r\n        try {\r\n            lbl_armor.setIcon(new ImageIcon(inventory.getArmor().getProperties().getTexture32()));\r\n        } catch (Exception ignored) {\r\n        }\r\n        try {\r\n            lbl_wepons.setIcon(new ImageIcon(inventory.getFirstHand().getProperties().getTexture32()));\r\n        } catch (Exception ignored) {\r\n        }\r\n        try {\r\n            lbl_shield.setIcon(new ImageIcon(inventory.getSecondHand().getProperties().getTexture32()));\r\n        } catch (Exception ignored) {\r\n        }\r\n        setLblIcons();\r\n    }\r\n\r\n    private void setListenerTransferHAndler() {\r\n        for (JLabel label : labelList) {\r\n            label.addMouseListener(listener);\r\n        }\r\n    }\r\n\r\n    private void setLblIcons() {\r\n        for (int i = 0; i < labelList.size(); i++) {\r\n            try {\r\n                labelList.get(i).setIcon(new ImageIcon(inventory.get(i).getProperties().getTexture32()));\r\n            } catch (Exception ignored) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private void createUIComponents() {\r\n        inventoryPanel = new JPanel() {\r\n            @Override\r\n            protected void paintComponent(Graphics g) {\r\n                super.paintComponent(g);\r\n                g.drawImage(ImageUtils.loadImage(\"src/com/roleplay/resources/images/Inventory_Background.png\"), 0, 0, this);\r\n                Toolkit.getDefaultToolkit().sync();\r\n            }\r\n        };\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/roleplay/gui/InventoryPanel.java b/src/com/roleplay/gui/InventoryPanel.java
--- a/src/com/roleplay/gui/InventoryPanel.java	(revision 376cb1327a38f81b1027ae69459a7dc16181ab42)
+++ b/src/com/roleplay/gui/InventoryPanel.java	(date 1679653666831)
@@ -68,11 +68,9 @@
         labelList.add(lbl_24);
 
         setListenerTransferHAndler();
-
     }
 
     private class DragMouseAdapter extends MouseAdapter {
-
         @Override
         public void mouseClicked(MouseEvent e) {
             JLabel c = (JLabel) e.getSource();
@@ -96,6 +94,7 @@
                 int index = labelList.indexOf(c);
                 //Wenn inventory null wirft NPE, wird nicht behandelt.
                 var item = inventory.get(index);
+
                 if (item instanceof Shield) {
                     inventory.setSecondHand(item);
                     lbl_shield.setIcon(new ImageIcon(inventory.getSecondHand().getProperties().getTexture32()));
@@ -121,21 +120,15 @@
             if (character.getProperties().isMyTurn()) {
                 inventory = character.getProperties().getInventory();
                 charcterPicture.setIcon(new ImageIcon(character.getProperties().getTexture100()));
+
                 break;
             }
         }
-        try {
-            lbl_armor.setIcon(new ImageIcon(inventory.getArmor().getProperties().getTexture32()));
-        } catch (Exception ignored) {
-        }
-        try {
-            lbl_wepons.setIcon(new ImageIcon(inventory.getFirstHand().getProperties().getTexture32()));
-        } catch (Exception ignored) {
-        }
-        try {
-            lbl_shield.setIcon(new ImageIcon(inventory.getSecondHand().getProperties().getTexture32()));
-        } catch (Exception ignored) {
-        }
+
+        lbl_armor.setIcon(new ImageIcon(inventory.getArmor().getProperties().getTexture32()));
+        lbl_wepons.setIcon(new ImageIcon(inventory.getFirstHand().getProperties().getTexture32()));
+        lbl_shield.setIcon(new ImageIcon(inventory.getSecondHand().getProperties().getTexture32()));
+
         setLblIcons();
     }
 
Index: src/com/roleplay/gui/ControlPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.roleplay.gui;\r\n\r\nimport com.roleplay.characters.Character;\r\nimport com.roleplay.interfaces.IObserver;\r\nimport com.roleplay.map.Settings;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.util.ArrayList;\r\nimport java.util.Random;\r\n\r\npublic class ControlPanel extends JPanel {\r\n    public JButton button;\r\n    private int value;\r\n    public final JLabel showValue = new JLabel();\r\n    public int turnCount = 0;\r\n    private final Settings settings;\r\n\r\n    public ControlPanel(Settings settings) {\r\n        this.settings = settings;\r\n\r\n        setLayout(new BoxLayout(this, BoxLayout.PAGE_AXIS));\r\n        setPreferredSize(new Dimension(190, BoardPanel.HEIGHT));\r\n        button = new JButton(\"roll\");\r\n        button.addActionListener(e -> {\r\n            Random rand = new Random();\r\n            value = rand.nextInt(20) + 1;\r\n            repaint();\r\n\r\n            settings.getPlayers().get(turnCount).getProperties().setMyTurn(true);\r\n            turnCount++;\r\n\r\n            if(turnCount == settings.getPlayers().size()){\r\n                turnCount = 0;\r\n            }\r\n\r\n            button.setEnabled(false);\r\n        });\r\n\r\n        add(showValue);\r\n        add(button);\r\n    }\r\n\r\n    @Override\r\n    protected void paintComponent(Graphics g) {\r\n        super.paintComponent(g);\r\n        showValue.setText(String.valueOf(getValue()));\r\n        Toolkit.getDefaultToolkit().sync();\r\n    }\r\n\r\n    public int getValue() {\r\n        return value;\r\n    }\r\n\r\n    public void setValue(int values) {\r\n        value = values;\r\n    }\r\n\r\n    public void update() {\r\n        setValue(this.getValue() - 1);\r\n        showValue.setText(String.valueOf(value));\r\n        if (getValue() == 0) {\r\n            for (int i = 0; i < settings.getPlayers().size(); i++) {\r\n                if (settings.getPlayers().get(i).getProperties().isMyTurn()) {\r\n                    settings.getPlayers().get(i).getProperties().setMyTurn(false);\r\n                    break;\r\n                }\r\n            }\r\n            JOptionPane.showMessageDialog(null, \"Player \"+ (turnCount + 1) + \"! \\n it's your turn!\");\r\n            button.setEnabled(true);\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/roleplay/gui/ControlPanel.java b/src/com/roleplay/gui/ControlPanel.java
--- a/src/com/roleplay/gui/ControlPanel.java	(revision 376cb1327a38f81b1027ae69459a7dc16181ab42)
+++ b/src/com/roleplay/gui/ControlPanel.java	(date 1679652710481)
@@ -1,12 +1,9 @@
 package com.roleplay.gui;
 
-import com.roleplay.characters.Character;
-import com.roleplay.interfaces.IObserver;
 import com.roleplay.map.Settings;
 
 import javax.swing.*;
 import java.awt.*;
-import java.util.ArrayList;
 import java.util.Random;
 
 public class ControlPanel extends JPanel {
Index: src/com/roleplay/gui/MainFrame.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.roleplay.gui;\r\n\r\nimport com.roleplay.characters.Character;\r\nimport com.roleplay.map.Settings;\r\nimport com.roleplay.tools.Messages;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class MainFrame extends JFrame {\r\n    private static MainPanel main;\r\n\r\n    public MainFrame() {\r\n        super();\r\n\r\n        initialize();\r\n    }\r\n\r\n    private void initialize() {\r\n        setTitle(Messages.getString(\"MvsN\"));\r\n        setSize(new Dimension(1200, 800));\r\n\r\n        JPanel contentPane = new JPanel();\r\n        contentPane.setLayout(new CardLayout());\r\n        Settings settings = new Settings();\r\n\r\n        main = new MainPanel(contentPane, this, settings);\r\n        CharacterPanel character = new CharacterPanel(contentPane, this, settings);\r\n        ArtefactPanel artefact = new ArtefactPanel(contentPane, this, settings);\r\n        SettingsPanel settingsPanel = new SettingsPanel(contentPane, settings);\r\n\r\n        contentPane.add(main.getMainPanel(), Messages.getString(\"MAIN_PANEL\"));\r\n        contentPane.add(character.getCharacterPanel(), Messages.getString(\"CHARACTER_PANEL\"));\r\n        contentPane.add(artefact.getArtefactPanel(), Messages.getString(\"ARTEFACT_PANEL\"));\r\n        contentPane.add(settingsPanel.getSettingsPanel(), Messages.getString(\"SETTINGS_PANEL\"));\r\n\r\n        setContentPane(contentPane);\r\n        setResizable(false);\r\n\r\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        setLocationRelativeTo(null);\r\n        setVisible(true);\r\n    }\r\n\r\n\r\n    public static void main(String[] args) {\r\n        new MainFrame();\r\n    }\r\n\r\n    @Override\r\n    public void setContentPane(Container contentPane) {\r\n        super.setContentPane(contentPane);\r\n    }\r\n\r\n    public static void setCharacterList(List<Character> newCharacterList) {\r\n        main.setCharacterJList(newCharacterList);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/roleplay/gui/MainFrame.java b/src/com/roleplay/gui/MainFrame.java
--- a/src/com/roleplay/gui/MainFrame.java	(revision 376cb1327a38f81b1027ae69459a7dc16181ab42)
+++ b/src/com/roleplay/gui/MainFrame.java	(date 1679652971138)
@@ -1,23 +1,22 @@
 package com.roleplay.gui;
 
-import com.roleplay.characters.Character;
 import com.roleplay.map.Settings;
 import com.roleplay.tools.Messages;
 
 import javax.swing.*;
 import java.awt.*;
-import java.util.ArrayList;
-import java.util.List;
 
 public class MainFrame extends JFrame {
-    private static MainPanel main;
-
     public MainFrame() {
         super();
 
         initialize();
     }
 
+    public static void main(String[] args) {
+        new MainFrame();
+    }
+
     private void initialize() {
         setTitle(Messages.getString("MvsN"));
         setSize(new Dimension(1200, 800));
@@ -26,14 +25,14 @@
         contentPane.setLayout(new CardLayout());
         Settings settings = new Settings();
 
-        main = new MainPanel(contentPane, this, settings);
-        CharacterPanel character = new CharacterPanel(contentPane, this, settings);
-        ArtefactPanel artefact = new ArtefactPanel(contentPane, this, settings);
+        MainPanel main = new MainPanel(contentPane, this, settings);
+        CharacterPanel characterPanel = new CharacterPanel(contentPane, settings);
+        ArtefactPanel artefactPanel = new ArtefactPanel(contentPane, settings);
         SettingsPanel settingsPanel = new SettingsPanel(contentPane, settings);
 
         contentPane.add(main.getMainPanel(), Messages.getString("MAIN_PANEL"));
-        contentPane.add(character.getCharacterPanel(), Messages.getString("CHARACTER_PANEL"));
-        contentPane.add(artefact.getArtefactPanel(), Messages.getString("ARTEFACT_PANEL"));
+        contentPane.add(characterPanel.getCharacterPanel(), Messages.getString("CHARACTER_PANEL"));
+        contentPane.add(artefactPanel.getArtefactPanel(), Messages.getString("ARTEFACT_PANEL"));
         contentPane.add(settingsPanel.getSettingsPanel(), Messages.getString("SETTINGS_PANEL"));
 
         setContentPane(contentPane);
@@ -44,17 +43,8 @@
         setVisible(true);
     }
 
-
-    public static void main(String[] args) {
-        new MainFrame();
-    }
-
     @Override
     public void setContentPane(Container contentPane) {
         super.setContentPane(contentPane);
     }
-
-    public static void setCharacterList(List<Character> newCharacterList) {
-        main.setCharacterJList(newCharacterList);
-    }
 }
\ No newline at end of file
Index: src/com/roleplay/gui/CharacterPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.roleplay.gui;\r\n\r\nimport com.roleplay.characters.Character;\r\nimport com.roleplay.characters.*;\r\nimport com.roleplay.characters.enums.Races;\r\nimport com.roleplay.characters.CharacterProperties;\r\nimport com.roleplay.map.Settings;\r\nimport com.roleplay.tools.ImageUtils;\r\nimport com.roleplay.tools.Messages;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\n\r\npublic class CharacterPanel {\r\n\r\n    private JPanel characterPanel;\r\n    private JLabel charcterPicture;\r\n    private int player = 1;\r\n    private JLabel title;\r\n    private JLabel subTitle;\r\n    private JButton btn_menu;\r\n    private JButton btn_charcter;\r\n    private JButton btn_wizard;\r\n    private JButton btn_Fighter;\r\n    private JButton btn_thief;\r\n    private JTextField playerName;\r\n    private JButton nextFinish;\r\n    private JButton btn_Dwarf;\r\n    private JButton btn_Human;\r\n    private JButton btn_Elf;\r\n    private JButton btn_Hobbit;\r\n    private JButton btn_error;\r\n    private Character character;\r\n    private final Settings settings;\r\n    private final Races[] race = {Races.HUMAN};\r\n\r\n    CharacterPanel(JPanel contentPane, MainFrame mainFrame, Settings settings) {\r\n        this.settings = settings;\r\n        this.character = new Warrior(new CharacterProperties(new Point(0, 0)));\r\n\r\n        subTitle.setText(Messages.getString(\"player\") + \" \" + player++ + \" \" + Messages.getString(\"chooseCharakter\"));\r\n\r\n        btn_menu.addActionListener(e -> {\r\n            CardLayout cardLayout = (CardLayout) contentPane.getLayout();\r\n            cardLayout.show(contentPane, Messages.getString(\"MAIN_PANEL\"));\r\n        });\r\n        btn_charcter.addActionListener(e -> {\r\n            CardLayout cardLayout = (CardLayout) contentPane.getLayout();\r\n            cardLayout.show(contentPane, Messages.getString(\"ARTEFACT_PANEL\"));\r\n        });\r\n\r\n        btn_Dwarf.addActionListener(e -> {\r\n            race[0] = Races.DWARF;\r\n            btn_Dwarf.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_125x75_enable.png\"))));\r\n            btn_Human.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_125x75.png\"))));\r\n            btn_Elf.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_125x75.png\"))));\r\n            btn_Hobbit.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_125x75.png\"))));\r\n        });\r\n\r\n        btn_Human.addActionListener(e -> {\r\n            race[0] = Races.HUMAN;\r\n            btn_Dwarf.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_125x75.png\"))));\r\n            btn_Human.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_125x75_enable.png\"))));\r\n            btn_Elf.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_125x75.png\"))));\r\n            btn_Hobbit.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_125x75.png\"))));\r\n\r\n        });\r\n\r\n        btn_Elf.addActionListener(e -> {\r\n            race[0] = Races.ELF;\r\n            btn_Dwarf.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_125x75.png\"))));\r\n            btn_Human.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_125x75.png\"))));\r\n            btn_Elf.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_125x75_enable.png\"))));\r\n            btn_Hobbit.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_125x75.png\"))));\r\n        });\r\n\r\n        btn_Hobbit.addActionListener(e -> {\r\n            race[0] = Races.HOBBIT;\r\n            btn_Dwarf.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_125x75.png\"))));\r\n            btn_Human.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_125x75.png\"))));\r\n            btn_Elf.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_125x75.png\"))));\r\n            btn_Hobbit.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_125x75_enable.png\"))));\r\n        });\r\n\r\n        btn_Fighter.addActionListener(e -> {\r\n            charcterPicture.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/player/fighter1_300x300.png\"))));\r\n            btn_Fighter.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_fighter_enable.png\"))));\r\n            btn_wizard.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_wizard.png\"))));\r\n            btn_thief.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_thief.png\"))));\r\n        });\r\n        btn_wizard.addActionListener(e -> {\r\n            charcterPicture.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/player/wizard1_300x300.png\"))));\r\n            btn_Fighter.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_fighter.png\"))));\r\n            btn_wizard.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_wizard_enable.png\"))));\r\n            btn_thief.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_thief.png\"))));\r\n            this.character = new Wizard(new CharacterProperties(new Point(0, 1)));\r\n        });\r\n        btn_thief.addActionListener(e -> {\r\n            charcterPicture.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/player/fighter2_300x300.png\"))));\r\n            btn_Fighter.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_fighter.png\"))));\r\n            btn_wizard.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_wizard.png\"))));\r\n            btn_thief.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_thief_enable.png\"))));\r\n            this.character = new Thief(new CharacterProperties(new Point(1, 0)));\r\n        });\r\n\r\n        nextFinish.addActionListener(e -> {\r\n            btn_error.setVisible(false);\r\n            try {\r\n                createNextPlayer();\r\n            } catch (IndexOutOfBoundsException IOOBE) {\r\n                btn_error.setText(Messages.getString(\"exists\"));\r\n                btn_error.setVisible(true);\r\n            } catch (NullPointerException NPE) {\r\n                btn_error.setText(Messages.getString(\"empty\"));\r\n                btn_error.setVisible(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    private void createNextPlayer() {\r\n        if (playerName.getText().isEmpty()) {\r\n            throw new NullPointerException();\r\n        }\r\n\r\n        if (settings.getPlayers().stream().noneMatch(x -> x.getProperties().getDisplayName().equalsIgnoreCase(playerName.getText().trim()))) {\r\n            if (settings.getPlayerCount() == settings.getPlayers().size() && settings.getPlayerCount() != player - 1) {\r\n                settings.getPlayers().get(player - 2).getProperties().setDisplayName(playerName.getText());\r\n                playerName.setText(settings.getPlayers().get(player - 1).getProperties().getDisplayName());\r\n\r\n                doClick(player - 1);\r\n            } else if (settings.getPlayers().size() < player - 1) {\r\n                new CharacterCreator(this.character, race[0], playerName.getText());\r\n                settings.addPlayer(this.character);\r\n                playerName.setText(\"\");\r\n\r\n                if (this.character instanceof Warrior) {\r\n                    this.character = new Warrior(new CharacterProperties(new Point(0, 0)));\r\n                } else if (this.character instanceof Wizard) {\r\n                    this.character = new Wizard(new CharacterProperties(new Point(0, 1)));\r\n                } else {\r\n                    this.character = new Thief(new CharacterProperties(new Point(1, 0)));\r\n                }\r\n            }\r\n\r\n            if (settings.getPlayerCount() == player - 1) {\r\n                this.player = 1;\r\n\r\n                subTitle.setText(Messages.getString(\"player\") + \" \" + this.player + \" \" + Messages.getString(\"chooseCharakter\"));\r\n                playerName.setText(settings.getPlayers().get(0).getProperties().getDisplayName());\r\n\r\n                doClick(0);\r\n            }\r\n\r\n            subTitle.setText(Messages.getString(\"player\") + \" \" + this.player + \" \" + Messages.getString(\"chooseCharakter\"));\r\n            this.player++;\r\n        }\r\n    }\r\n\r\n    private void doClick(int i) {\r\n        final Character tempCharacter = settings.getPlayers().get(i);\r\n        final Races race = tempCharacter.getProperties().getRace();\r\n\r\n        if (race == Races.ELF) {\r\n            btn_Elf.doClick();\r\n        } else if (race == Races.DWARF) {\r\n            btn_Dwarf.doClick();\r\n        } else if (race == Races.HOBBIT) {\r\n            btn_Hobbit.doClick();\r\n        } else {\r\n            btn_Human.doClick();\r\n        }\r\n\r\n        if (tempCharacter instanceof Warrior) {\r\n            btn_Fighter.doClick();\r\n        } else if (tempCharacter instanceof Wizard) {\r\n            btn_wizard.doClick();\r\n        } else {\r\n            btn_thief.doClick();\r\n        }\r\n    }\r\n\r\n    private void createUIComponents() {\r\n        characterPanel = new JPanel() {\r\n\r\n            @Override\r\n            protected void paintComponent(Graphics g) {\r\n                super.paintComponent(g);\r\n                g.drawImage(ImageUtils.loadImage(\"src/com/roleplay/resources/images/Background_Character_3.png\"), 0, 0, this);\r\n                Toolkit.getDefaultToolkit().sync();\r\n            }\r\n        };\r\n    }\r\n\r\n    public JPanel getCharacterPanel() {\r\n        return characterPanel;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/roleplay/gui/CharacterPanel.java b/src/com/roleplay/gui/CharacterPanel.java
--- a/src/com/roleplay/gui/CharacterPanel.java	(revision 376cb1327a38f81b1027ae69459a7dc16181ab42)
+++ b/src/com/roleplay/gui/CharacterPanel.java	(date 1679652851589)
@@ -36,7 +36,7 @@
     private final Settings settings;
     private final Races[] race = {Races.HUMAN};
 
-    CharacterPanel(JPanel contentPane, MainFrame mainFrame, Settings settings) {
+    CharacterPanel(JPanel contentPane, Settings settings) {
         this.settings = settings;
         this.character = new Warrior(new CharacterProperties(new Point(0, 0)));
 
Index: src/com/roleplay/gui/PlayerListPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.roleplay.gui;\r\n\r\nimport com.roleplay.characters.Character;\r\nimport com.roleplay.map.Settings;\r\nimport com.roleplay.tools.ImageUtils;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class PlayerListPanel extends JPanel {\r\n    public PlayerListPanel(Settings settings) {\r\n        setLayout(new GridLayout(settings.getPlayers().size(),1,15,-80));\r\n        setPreferredSize(new Dimension(190, BoardPanel.HEIGHT));\r\n\r\n        this.setBorder(BorderFactory.createEmptyBorder(60,20,75,20));\r\n\r\n        for(Character c : settings.getPlayers()){\r\n            Box box = new Box(BoxLayout.LINE_AXIS);\r\n            box.add(Box.createHorizontalGlue());\r\n            box.add(new PlayerPanel(c));\r\n            box.add(Box.createHorizontalGlue());\r\n            add(box);\r\n        }\r\n    }\r\n    @Override\r\n    protected void paintComponent(Graphics g){\r\n        super.paintComponent(g);\r\n        g.drawImage(ImageUtils.loadImage(\"src/com/roleplay/resources/images/playerList.png\"),0,0,this);\r\n        Toolkit.getDefaultToolkit().sync();\r\n    }\r\n\r\n    public void update() {\r\n        repaint();\r\n    }\r\n\r\n    private static class PlayerPanel extends JPanel{\r\n        protected JLabel displayName;\r\n        protected JLabel type;\r\n        protected JLabel health;\r\n        JLabel texture;\r\n        JPanel info = new JPanel();\r\n\r\n        public PlayerPanel(Character c) {\r\n            setLayout(new FlowLayout());\r\n            setOpaque(false);\r\n            this.displayName = new JLabel(c.getProperties().getDisplayName());\r\n            this.type = new JLabel(c.getProperties().getName());\r\n            this.health = new JLabel(String.valueOf(c.getProperties().getHealthPoints()));\r\n            this.health.setForeground(Color.GREEN);\r\n\r\n            texture = new JLabel(new ImageIcon(c.getProperties().getTexture32()));\r\n            displayName.setForeground(new Color(240, 240, 240));\r\n\r\n            info.setOpaque(false);\r\n            info.setLayout(new BoxLayout(info, BoxLayout.PAGE_AXIS));\r\n            info.add(this.displayName);\r\n            info.add(this.health);\r\n\r\n            add(texture);\r\n            add(info);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/roleplay/gui/PlayerListPanel.java b/src/com/roleplay/gui/PlayerListPanel.java
--- a/src/com/roleplay/gui/PlayerListPanel.java	(revision 376cb1327a38f81b1027ae69459a7dc16181ab42)
+++ b/src/com/roleplay/gui/PlayerListPanel.java	(date 1679652734824)
@@ -6,8 +6,6 @@
 
 import javax.swing.*;
 import java.awt.*;
-import java.util.ArrayList;
-import java.util.List;
 
 public class PlayerListPanel extends JPanel {
     public PlayerListPanel(Settings settings) {
Index: src/com/roleplay/items/ItemRegister.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/roleplay/items/ItemRegister.java b/src/com/roleplay/items/ItemRegister.java
new file mode 100644
--- /dev/null	(date 1679654042255)
+++ b/src/com/roleplay/items/ItemRegister.java	(date 1679654042255)
@@ -0,0 +1,7 @@
+package com.roleplay.items;
+
+public class ItemRegister {
+    public void test() {
+
+    }
+}
\ No newline at end of file
Index: src/com/roleplay/gui/ArtefactPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.roleplay.gui;\r\n\r\n\r\nimport com.roleplay.map.Settings;\r\nimport com.roleplay.tools.ImageUtils;\r\nimport com.roleplay.tools.Messages;\r\nimport com.roleplay.tools.Strings;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.util.Objects;\r\n\r\npublic class ArtefactPanel {\r\n    JPanel artefactPanel;\r\n    private JButton btn_menu;\r\n    private JButton btn_artefact;\r\n    private JLabel title;\r\n    private JLabel subTitle;\r\n    private JButton btn_Axe;\r\n    private JButton btn_Bow;\r\n    private JButton btn_Dagger;\r\n    private JButton btn_Dart;\r\n    private JButton btn_HandAxe;\r\n    private JButton btn_Spear;\r\n    private JButton btn_Sword;\r\n    private JButton btn_Chain;\r\n    private JButton btn_Iron;\r\n    private JButton btn_Leather;\r\n    private JButton btn_Shield;\r\n    private JButton btn_Amulet;\r\n    private JButton btn_Cape;\r\n    private JButton btn_Potion;\r\n    private JButton btn_Ring;\r\n    private final Settings settings;\r\n\r\n    ArtefactPanel(JPanel contentPane, MainFrame mainFrame, Settings settings) {\r\n        this.settings = settings;\r\n\r\n        btn_menu.addActionListener(e -> {\r\n            CardLayout cardLayout = (CardLayout) contentPane.getLayout();\r\n            cardLayout.show(contentPane, Messages.getString(\"MAIN_PANEL\"));\r\n        });\r\n        btn_artefact.addActionListener(e -> {\r\n            CardLayout cardLayout = (CardLayout) contentPane.getLayout();\r\n            cardLayout.show(contentPane, Messages.getString(\"SETTINGS_PANEL\"));\r\n        });\r\n\r\n        btn_Amulet.addActionListener(e -> changeIconandBlacklist(Strings.getString(\"amulet\"), mainFrame, btn_Amulet));\r\n        btn_Cape.addActionListener(e -> changeIconandBlacklist(Strings.getString(\"cape\"), mainFrame, btn_Cape));\r\n        btn_Potion.addActionListener(e -> changeIconandBlacklist(Strings.getString(\"potion\"), mainFrame, btn_Potion));\r\n        btn_Ring.addActionListener(e -> changeIconandBlacklist(Strings.getString(\"ring\"), mainFrame, btn_Ring));\r\n        btn_Leather.addActionListener(e -> changeIconandBlacklist(Strings.getString(\"leather\"), mainFrame, btn_Leather));\r\n        btn_Chain.addActionListener(e -> changeIconandBlacklist(Strings.getString(\"chain\"), mainFrame, btn_Chain));\r\n        btn_Iron.addActionListener(e -> changeIconandBlacklist(Strings.getString(\"iron\"), mainFrame, btn_Iron));\r\n        btn_Shield.addActionListener(e -> changeIconandBlacklist(Strings.getString(\"shield\"), mainFrame, btn_Shield));\r\n        btn_Axe.addActionListener(e -> changeIconandBlacklist(Strings.getString(\"axe\"), mainFrame, btn_Axe));\r\n        btn_Bow.addActionListener(e -> changeIconandBlacklist(Strings.getString(\"bow\"), mainFrame, btn_Bow));\r\n        btn_Dagger.addActionListener(e -> changeIconandBlacklist(Strings.getString(\"dagger\"), mainFrame, btn_Dagger));\r\n        btn_Dart.addActionListener(e -> changeIconandBlacklist(Strings.getString(\"dart\"), mainFrame, btn_Dart));\r\n        btn_HandAxe.addActionListener(e -> changeIconandBlacklist(Strings.getString(\"handAxe\"), mainFrame, btn_HandAxe));\r\n        btn_Spear.addActionListener(e -> changeIconandBlacklist(Strings.getString(\"spear\"), mainFrame, btn_Spear));\r\n        btn_Sword.addActionListener(e -> changeIconandBlacklist(Strings.getString(\"sword\"), mainFrame, btn_Sword));\r\n\r\n    }\r\n\r\n    private void changeIconandBlacklist(String name, MainFrame mainFrame, JButton button) {\r\n        if (settings.containsArtefactInBlacklist(name)) {\r\n            button.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_\" + name + \"_enable.png\"))));\r\n            settings.removeArtefactFromBlacklist(name);\r\n        } else {\r\n            button.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage(\"src/com/roleplay/resources/images/buttons/btn_\" + name + \"_disable.png\"))));\r\n            settings.addArtefactToBlacklist(name);\r\n        }\r\n    }\r\n\r\n    public JPanel getArtefactPanel() {\r\n        return artefactPanel;\r\n    }\r\n\r\n    private void createUIComponents() {\r\n        artefactPanel = new JPanel() {\r\n\r\n            @Override\r\n            protected void paintComponent(Graphics g) {\r\n                super.paintComponent(g);\r\n                g.drawImage(ImageUtils.loadImage(\"src/com/roleplay/resources/images/artefact_background2.png\"), 0, 0, this);\r\n                Toolkit.getDefaultToolkit().sync();\r\n\r\n            }\r\n\r\n        };\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/roleplay/gui/ArtefactPanel.java b/src/com/roleplay/gui/ArtefactPanel.java
--- a/src/com/roleplay/gui/ArtefactPanel.java	(revision 376cb1327a38f81b1027ae69459a7dc16181ab42)
+++ b/src/com/roleplay/gui/ArtefactPanel.java	(date 1679652840415)
@@ -33,7 +33,7 @@
     private JButton btn_Ring;
     private final Settings settings;
 
-    ArtefactPanel(JPanel contentPane, MainFrame mainFrame, Settings settings) {
+    ArtefactPanel(JPanel contentPane, Settings settings) {
         this.settings = settings;
 
         btn_menu.addActionListener(e -> {
@@ -45,25 +45,25 @@
             cardLayout.show(contentPane, Messages.getString("SETTINGS_PANEL"));
         });
 
-        btn_Amulet.addActionListener(e -> changeIconandBlacklist(Strings.getString("amulet"), mainFrame, btn_Amulet));
-        btn_Cape.addActionListener(e -> changeIconandBlacklist(Strings.getString("cape"), mainFrame, btn_Cape));
-        btn_Potion.addActionListener(e -> changeIconandBlacklist(Strings.getString("potion"), mainFrame, btn_Potion));
-        btn_Ring.addActionListener(e -> changeIconandBlacklist(Strings.getString("ring"), mainFrame, btn_Ring));
-        btn_Leather.addActionListener(e -> changeIconandBlacklist(Strings.getString("leather"), mainFrame, btn_Leather));
-        btn_Chain.addActionListener(e -> changeIconandBlacklist(Strings.getString("chain"), mainFrame, btn_Chain));
-        btn_Iron.addActionListener(e -> changeIconandBlacklist(Strings.getString("iron"), mainFrame, btn_Iron));
-        btn_Shield.addActionListener(e -> changeIconandBlacklist(Strings.getString("shield"), mainFrame, btn_Shield));
-        btn_Axe.addActionListener(e -> changeIconandBlacklist(Strings.getString("axe"), mainFrame, btn_Axe));
-        btn_Bow.addActionListener(e -> changeIconandBlacklist(Strings.getString("bow"), mainFrame, btn_Bow));
-        btn_Dagger.addActionListener(e -> changeIconandBlacklist(Strings.getString("dagger"), mainFrame, btn_Dagger));
-        btn_Dart.addActionListener(e -> changeIconandBlacklist(Strings.getString("dart"), mainFrame, btn_Dart));
-        btn_HandAxe.addActionListener(e -> changeIconandBlacklist(Strings.getString("handAxe"), mainFrame, btn_HandAxe));
-        btn_Spear.addActionListener(e -> changeIconandBlacklist(Strings.getString("spear"), mainFrame, btn_Spear));
-        btn_Sword.addActionListener(e -> changeIconandBlacklist(Strings.getString("sword"), mainFrame, btn_Sword));
+        btn_Amulet.addActionListener(e -> changeIconandBlacklist(Strings.getString("amulet"), btn_Amulet));
+        btn_Cape.addActionListener(e -> changeIconandBlacklist(Strings.getString("cape"), btn_Cape));
+        btn_Potion.addActionListener(e -> changeIconandBlacklist(Strings.getString("potion"), btn_Potion));
+        btn_Ring.addActionListener(e -> changeIconandBlacklist(Strings.getString("ring"), btn_Ring));
+        btn_Leather.addActionListener(e -> changeIconandBlacklist(Strings.getString("leather"), btn_Leather));
+        btn_Chain.addActionListener(e -> changeIconandBlacklist(Strings.getString("chain"), btn_Chain));
+        btn_Iron.addActionListener(e -> changeIconandBlacklist(Strings.getString("iron"), btn_Iron));
+        btn_Shield.addActionListener(e -> changeIconandBlacklist(Strings.getString("shield"), btn_Shield));
+        btn_Axe.addActionListener(e -> changeIconandBlacklist(Strings.getString("axe"), btn_Axe));
+        btn_Bow.addActionListener(e -> changeIconandBlacklist(Strings.getString("bow"), btn_Bow));
+        btn_Dagger.addActionListener(e -> changeIconandBlacklist(Strings.getString("dagger"), btn_Dagger));
+        btn_Dart.addActionListener(e -> changeIconandBlacklist(Strings.getString("dart"), btn_Dart));
+        btn_HandAxe.addActionListener(e -> changeIconandBlacklist(Strings.getString("handAxe"), btn_HandAxe));
+        btn_Spear.addActionListener(e -> changeIconandBlacklist(Strings.getString("spear"), btn_Spear));
+        btn_Sword.addActionListener(e -> changeIconandBlacklist(Strings.getString("sword"), btn_Sword));
 
     }
 
-    private void changeIconandBlacklist(String name, MainFrame mainFrame, JButton button) {
+    private void changeIconandBlacklist(String name, JButton button) {
         if (settings.containsArtefactInBlacklist(name)) {
             button.setIcon(new ImageIcon(Objects.requireNonNull(ImageUtils.loadImage("src/com/roleplay/resources/images/buttons/btn_" + name + "_enable.png"))));
             settings.removeArtefactFromBlacklist(name);
@@ -79,7 +79,6 @@
 
     private void createUIComponents() {
         artefactPanel = new JPanel() {
-
             @Override
             protected void paintComponent(Graphics g) {
                 super.paintComponent(g);
Index: src/com/roleplay/tools/Strings.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.roleplay.tools;\r\n\r\nimport java.util.ResourceBundle;\r\n\r\npublic class Strings {\r\n\r\n    static ResourceBundle bundle = ResourceBundle.getBundle(\"com.roleplay.tools.strings\");\r\n\r\n    public static String getString(String key) {\r\n        return bundle.getString(key);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/roleplay/tools/Strings.java b/src/com/roleplay/tools/Strings.java
--- a/src/com/roleplay/tools/Strings.java	(revision 376cb1327a38f81b1027ae69459a7dc16181ab42)
+++ b/src/com/roleplay/tools/Strings.java	(date 1679652830882)
@@ -3,7 +3,6 @@
 import java.util.ResourceBundle;
 
 public class Strings {
-
     static ResourceBundle bundle = ResourceBundle.getBundle("com.roleplay.tools.strings");
 
     public static String getString(String key) {
